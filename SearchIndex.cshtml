@model ZJKRiskManage.Model.DTO_Model.GetHomeIndexModel
<link href="~/Content/Scripts/ol/ol.css" rel="stylesheet" />
<script src="~/Content/Scripts/ol/ol.js"></script>
<script src="~/Content/Scripts/gcjtobd.js"></script>
<script src="~/Content/Scripts/jquery-1.8.2.js"></script>
<script src="~/Script/highstock.js"></script>
<script src="~/Content/Scripts/jquery.autocomplete.js"></script>
<script src="~/Script/highcharts-more.js"></script>
<link href="~/Content/Styles/main.css" rel="stylesheet" />
<style type="text/css">
    .map-change-btn {
        position: absolute;
        right: 4px;
        bottom: 10px;
        width: 200px;
        border-radius: 3px;
        overflow: hidden;
        height: 100px;
    }

        .map-change-btn li {
            float: left;
            width: 60px;
            height: 32px;
            line-height: 32px;
            text-align: center;
            font-size: 16px;
            cursor: pointer;
        }

            .map-change-btn li.active {
                color: #fff;
                background: #0073cb;
            }

    .ac_results {
        width: 200px !important;
    }

    .detail_search {
        line-height: 35px;
        cursor: pointer;
        font-size: 14px;
        color: #666;
        padding-left: 35px;
        background: url(../Content/Images/sousuo.png) no-repeat 12px center;
        background-color: #fff;
        width: 195px;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }

        .detail_search:hover {
            background-color: #ebebeb;
        }

    #nowLayer {
        width: 90px;
        z-index: 10;
        background: url(../../Content/Images/shiliang.png) no-repeat center;
        position: absolute;
        right: 10px;
        bottom: 6px;
        /* width: 103px; */
        height: 70px;
        z-index: 110;
        cursor: pointer;
        border-radius: 3px;
        border: 2px solid #fff;
    }

    #hideLayer {
        right: 20px;
        width: 90px;
        background: url(../../Content/Images/yingxiang.png) no-repeat center;
        z-index: 108;
        position: absolute;
        height: 70px;
        cursor: pointer;
        border-radius: 3px;
        bottom: 6px;
        border: 2px solid #fff;
    }
    /*table边框*/
    #results {
        padding: 5px;
    }

        #results td {
            border: solid #add9c0;
            border-width: 0px 1px 1px 0px;
            padding: 10px 0px;
            text-align: center;
            word-wrap: break-word;
            cursor: pointer;
            /*width:120px;
        height: 26px;*/
        }

        #results th {
            border: solid #add9c0;
            border-width: 0px 1px 1px 0px;
            padding: 10px 0px;
            text-align: center;
            /*width:80px;*/
        }

        #results table {
            border: solid #add9c0;
            border-width: 1px 0px 0px 1px;
            table-layout: fixed;
        }
</style>
<div class="main-box">
    <div class="main-container">
        <div class="main-left">
            <div class="left-top">
                <div class="risk-box fl">
                    <p class="title">城市风险</p>
                    <div id="SafeNum" style="cursor: pointer; width: 100%; height: 90%;"
                         class="risk">
                    </div>
                </div>
                <div class="left-area fl">
                    <div class="dbg" style="border-top: 3px solid #ef6d6d;">
                        <p class="title">区域风险<span class="fr title-select"><a href="#2">区</a><a href="#2" class="select">县</a></span></p>
                        <div class="area-box clearfix">
                            @{
                                if (Model.quyuNameList != null && Model.quyuNameList.Count > 0)
                                {
                                    foreach (var item in Model.quyuNameList)
                                    {
                                        <div>
                                            <div>
                                                <span>@item.Name</span>
                                                <strong class="@item.Color">@item.Count</strong>
                                            </div>
                                        </div>
                                    }
                                }
                            }
                        </div>
                    </div>

                </div>
            </div>
            <div class="left-trade ">
                <p class="title">
                    行业风险
                </p>
                <div class="trade-box">
                    <ul class="trade-class">
                        <li class="active">工业风险源</li>
                        <li>人员密集场所</li>
                        <li>公共设施</li>
                        <li>其他</li>
                    </ul>
                    <div class="trade-list-box clearfix">
                        <div class="trade-list">
                            @{
                                var count = 1;
                                if (Model.industryNameList != null && Model.industryNameList.Count > 0)
                                {
                                    foreach (var item in Model.industryNameList)
                                    {
                                        if (count < 9)
                                        {
                                            <div>
                                                <span>@item.Name</span>
                                                <strong>@item.Count</strong>
                                            </div>
                                        }
                                        count++;
                                    }
                                }
                            }
                        </div>
                    </div>
                </div>
            </div>

            <div class="left-bottom">
                <p class="title" style="color: #fa9032;">
                    风险分析
                </p>
                <div class="clearfix" id="add_tab">
                    <div class="fl">
                        <a href="#2" id="areaRiskAnalysis">
                            <img src="~/Content/Images/Search/r-icon1.png" />
                            <span>区域风险分析</span>
                        </a>
                    </div>
                    <div class="fl">
                        <a href="#2" style="background: #bbdaf5; color: #1f85db;">
                            <img src="~/Content/Images/Search/r-icon2.png" />
                            <span>行业风险分析</span>
                        </a>
                    </div>
                    <div class="fl">
                        <a href="#2" style="background: #f8dcc6; color: #eb8b44;">
                            <img src="~/Content/Images/Search/r-icon3.png" />
                            <span>企业风险分析</span>
                        </a>
                    </div>
                    <div class="fl">
                        <a href="#2" id="RiskList" style="background: #c4e9cc; color: #19a937;">
                            <img src="~/Content/Images/Search/r-icon4.png" />
                            <span>风险清单</span>
                        </a>
                    </div>
                </div>
            </div>
        </div>
        <div class="main-right">
            <div class="map-search">
                <input type="text" id="serchTxt" placeholder="模糊搜索" style="font-size: 16px; padding-left: 5px;" />
                <button type="button">搜索</button>
            </div>
            <div class="four-color">
                <a href="#2">
                    <img src="~/Content/Images/Search/mapicon01.png" />重大风险点
                </a>
                <a href="#2">
                    <img src="~/Content/Images/Search/mapicon02.png" />重大危险源
                </a>
                <a href="#2">
                    <img src="~/Content/Images/Search/mapicon03.png" />重大隐患
                </a>
                <a href="#2">
                    <img src="~/Content/Images/Search/mapicon04.png" />脆弱性目标
                </a>
            </div>
            <ul class="maptool" id="maptool">
                <li class="fl">
                    <a href="#2" style="width: 105px;">
                        <img src="~/Content/Images/Search/mapicon05.png" />空间分析
                    </a>
                    <p class="roomdata" id="bufferDiv">
                        <i>点缓冲区分析</i>
                        <i>线缓冲区分析</i>
                        <i>面缓冲区分析</i>
                        <i>清除缓冲区分析</i>
                    </p>
                </li>

                <li class="fl toolcon">
                    <a href="#2" style="width: 83px;">
                        <img src="~/Content/Images/Search/mapicon06.png" />工具
                    </a>
                    <p class="roomdata" style="width: 83px;">
                        <i class="clearHistory">清除历史</i>
                        <i>视频下载</i>
                        <i class="guan">四色图开关</i>
                    </p>
                </li>
            </ul>
            <div class="maprescue">
                <a href="#2">
                    <img src="~/Content/Images/Search/mapicon12.png" />救护队
                </a>
                <a href="#2">
                    <img src="~/Content/Images/Search/mapicon13.png" />避难场所
                </a>
                <a href="#2">
                    <img src="~/Content/Images/Search/mapicon14.png" />医院
                </a>
                <a href="#2">
                    <img src="~/Content/Images/Search/mapicon15.png" />应急装备
                </a>
                <a href="#2">
                    <img src="~/Content/Images/Search/mapicon16.png" />应急物资
                </a>
            </div>
            <ul class="mapmo" id="mapmo">
                <li>
                    <a href="#2">
                        <img src="~/Content/Images/Search/mapicon07.png" /><span>模拟分析</span>
                    </a>
                    <p class="mapmstory" id="moniDiv">
                        <i>毒气</i>
                        <i>爆炸</i>
                        <i>火灾</i>
                    </p>
                </li>
                <li>
                    <a href="#2" class="right-list2">
                        <img src="~/Content/Images/Search/mapicon08.png" /><span>在线监测</span>
                    </a>
                </li>
                <li>
                    <a href="#2" class="right-list3">
                        <img src="~/Content/Images/Search/mapicon09.png" /><span>视频监控</span>
                    </a>
                </li>
            </ul>
            <div class="mapweather" id="mapweather">
                <a href="#2" attr="云图" title="打开云图">
                    <img src="~/Content/Images/Search/mapicon10.png" />
                </a>
                <a href="#2" attr="人口分布" title="查看人口分布图">
                    <img src="~/Content/Images/Search/mapicon11.png" />
                </a>
            </div>
            <div class="maplegend">
                <img src="~/Content/Images/model/wind.png" />
            </div>
            <div class="right-map" id="mapRisk" style="height: 100%; overflow: hidden;">
                <div id="popup" class="ol-popup">
                    <a href="#" id="popup-closer" class=""></a>
                    <div id="popup-content"></div>
                </div>
            </div>
            <ul class="map-change-btn">
                <div alt="当前底图" id="nowLayer"></div>
                <div alt="" id="hideLayer"></div>
            </ul>
        </div>
    </div>
</div>

<script type="text/javascript">


    var clickName = "";
    var geoserverUrl = 'http://10.0.0.4:8080/geoserver/';//内网
    //geoserverUrl = 'http://124.192.234.186:8000/geoserver/';//外网
    var map, view,
        cityLayer,//市
        countyLayer,//区县四色图
        companyLayer,//公司
        factoryLayer;//工厂
    var countyBaseLayer,//区县底图
        populationLayer,//人口热力图
        windYTLayer,//风向云图
        temperLayer;//温度热力图
    var analysisLyr, vectorLyr; //模型图层
    var bufferLayer;//缓冲图层
    var container = document.getElementById('popup');
    var content = document.getElementById('popup-content');
    var closer = document.getElementById('popup-closer');
    var projection = ol.proj.get("EPSG:3857");
    var center = [12806018.59297647, 4996988.103060308], zoom = 8;
    var googleMapLayer = new ol.layer.Tile({
        source: new ol.source.XYZ({
            url: 'http://www.google.cn/maps/vt/pb=!1m4!1m3!1i{z}!2i{x}!3i{y}!2m3!1e0!2sm!3i345013117!3m8!2szh-CN!3scn!5e1105!12m4!1e68!2m2!1sset!2sRoadmap!4e0'
        })
    });
    var googleRasterLayer = new ol.layer.Tile({
        source: new ol.source.TileImage({ url: 'http://mt2.google.cn/vt/lyrs=y&hl=zh-CN&gl=CN&src=app&x={x}&y={y}&z={z}&s=G' }),
        visible: false
    });
    var overlay = new ol.Overlay(({
        element: container,
        autoPan: true,
        autoPanAnimation: {
            duration: 250
        }
    }));

    closer.onclick = function () {
        overlay.setPosition(undefined);
        closer.blur();
        return false;
    };
    function initMap() {
        createMap();//创建地图
        setMapEvent();//设置地图事件

        //GetQuyuByName();
        //GetQuyuByName2();
    }
    //创建地图函数：

    function createMap() {
        view = new ol.View({
            center: center,
            projection: 'EPSG:3857',
            zoom: zoom,
            minZoom: zoom - 1
        });
        baidu_raster = new ol.layer.Tile({
            source: new ol.source.XYZ({
                tileUrlFunction: function (tileCoord) {
                    var x = 'C' + zeroPad(tileCoord[1], 8, 16);
                    var y = 'R' + zeroPad(-tileCoord[2], 8, 16);
                    var z = 'L' + zeroPad(tileCoord[0], 2, 10);
                    return url + '/' + z + '/' + y + '/' + x + '.png';
                },
                projection: 'EPSG:3857'
            })
        });
        cityLayer = new ol.layer.Image({
            source: new ol.source.ImageWMS({
                params: {
                    VERSION: '1.1.0',
                    STYLE: '',
                    LAYERS: 'sf:city_zjk',
                    FORMAT: 'image/png'
                },
                url: geoserverUrl + 'sf/wms',
                projection: projection
            })
        });
        windYTLayer = new ol.layer.Image({
            source: new ol.source.ImageWMS({
                params: {
                    VERSION: '1.1.0',
                    STYLE: '',
                    LAYERS: 'sf:zjk_villagezf_wind',
                    FORMAT: 'image/png'
                },
                url: geoserverUrl + 'sf/wms',
                projection: projection
            }),
            visible: false
        });
        countyLayer = new ol.layer.Vector({
            source: new ol.source.Vector({
                url: geoserverUrl + 'sf/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=sf:zjk_county&maxFeatures=1000&outputFormat=application%2Fjson',
                format: new ol.format.GeoJSON()
            }),
            style: function (f, res) {
                var fillColor = 'rgba(0,0,0,0)';
                var weight = parseInt(f.getProperties().weight);
                if (res > 152) {
                    factoryLayer.setVisible(false);
                    if (weight >= 0 && weight < 3) {
                        fillColor = '#0066ce';
                    } else if (weight >= 3 && weight < 6) {
                        fillColor = '#f5e812';
                    } else if (weight >= 6 && weight < 9) {
                        fillColor = '#ef7216';
                    } else if (weight >= 9) {
                        fillColor = '#ea3131';
                    }

                } else {
                    factoryLayer.setVisible(true);
                }
                return new ol.style.Style({
                    fill: new ol.style.Fill({
                        color: fillColor
                    }),
                    stroke: new ol.style.Stroke({
                        width: '3',
                        color: '#9d9d9d'
                    })
                })
            }
        });
        countyBaseLayer = new ol.layer.Image({
            source: new ol.source.ImageWMS({
                params: {
                    VERSION: '1.1.1',
                    STYLE: '',
                    LAYERS: 'sf:zjk_county',
                    FORMAT: 'image/png'
                },
                url: geoserverUrl + 'sf/wms'
            })
        });
        populationLayer = new ol.layer.Heatmap({
            source: new ol.source.Vector({
                url: geoserverUrl + '/sf/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=sf:zjk_villagezf&maxFeatures=5000&outputFormat=application%2Fjson',
                //: geoserverUrl + 'sf/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=sf:city_p&maxFeatures=5000&outputFormat=application%2Fjson',
                format: new ol.format.GeoJSON({})
            }),
            gradient: ['#00f', '#0ff', '#0f0', '#ff0', '#f00'],
            blur: 15,
            radius: 8,
            weight: 'weight',
            visible: false

        });
        temperLayer = new ol.layer.Heatmap({
            source: new ol.source.Vector({
                url: geoserverUrl + '/sf/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=	sf:zjk_villagezftmp&maxFeatures=5000&outputFormat=application%2Fjson',
                //: geoserverUrl + 'sf/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=sf:city_p&maxFeatures=5000&outputFormat=application%2Fjson',
                format: new ol.format.GeoJSON({})
            }),
            gradient: ['#00f', '#0ff', '#0f0', '#ff0', '#f00'],
            blur: 15,
            radius: 8,
            weight: 'weight',
            visible: false

        });
        var points = [[115.812474, 41.853494], [115.82196, 41.853494], [115.823685, 41.851775], [115.813911, 41.850271], [115.812474, 41.853494]]
        factoryLayer = new ol.layer.Vector({
            source: new ol.source.Vector({
                url: geoserverUrl + 'sf/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=sf:factory&maxFeatures=100&outputFormat=application%2Fjson',
                format: new ol.format.GeoJSON()
            }),
            name: 'factoryLayer',
            style: function (f, res) {
                var fillColor = 'rgba(0,0,0,0)';
                var weight = parseInt(f.getProperties().weight);
                var name = f.getProperties().name;
                if (weight > 0 && weight < 3) {
                    fillColor = '#0066ce';
                } else if (weight >= 3 && weight < 5) {
                    fillColor = '#f5e812';
                } else if (weight >= 5 && weight < 7) {
                    fillColor = '#ef7216';
                } else if (weight >= 7) {
                    fillColor = '#ea3131';
                }

                return new ol.style.Style({
                    fill: new ol.style.Fill({
                        color: fillColor
                    }),
                    stroke: new ol.style.Stroke({
                        width: '3',
                        color: '#3F7FBF'
                    }),
                    text: new ol.style.Text({
                        text: name,
                        font: '16px 微软雅黑',
                        fill: new ol.style.Fill({ color: '#0C1926' })
                    })
                })
            }
        });
        companyLayer = new ol.layer.Vector({
            source: new ol.source.Vector({

            }),
            name: 'companyLayer'
        });
        analysisLyr = new ol.layer.Vector({
            source: new ol.source.Vector({

            }),
            name: 'analysisLyr'
            //zIndex: 80
        });
        vectorLyr = new ol.layer.Vector({
            source: new ol.source.Vector({

            }),
            name: 'vectorLyr'
            //zIndex: 90
        });
        bufferLayer = new ol.layer.Vector({
            source: new ol.source.Vector({
                projection: projection
            }),
            style: function (f, res) {

                var title = f.getProperties().title;
                var fillColor = 'rgba(0,0,0,0)';
                var strokeColor = '#3F7FBF';
                if (f.getGeometry().getType() == 'LineString') {
                    strokeColor = '#1C19FA';
                }
                var img = 'Rating4.png';
                if (title) { img = GetImgByEmergencyResource(title); }
                f.setProperties({ 'iconsrc': img});
                return new ol.style.Style({
                    fill: new ol.style.Fill({
                        color: fillColor
                    }),
                    stroke: new ol.style.Stroke({
                        width: '3',
                        color: strokeColor
                    }),
                    image: new ol.style.Icon({
                        src: "/Content/Images/Search/" + img,
                        crossOrigin: 'anonymous',
                        size: [26, 26],
                        anchor: [0.5, 0.5]
                    })
                })
            },
            name: 'bufferLayer',

        });
        map = new ol.Map({
            target: 'mapRisk',
            overlays: [overlay],
            controls: ol.control.defaults({
                zoom: false,
            }).extend([

            ]),
            interactions: ol.interaction.defaults({
                doubleClickZoom: false
            }),
            logo: false,
            layers: [googleMapLayer, googleRasterLayer, countyBaseLayer, countyLayer, factoryLayer, cityLayer, populationLayer, temperLayer, windYTLayer, companyLayer, analysisLyr, vectorLyr, bufferLayer],
            //layers: [googleMapLayer, googleRasterLayer, countyBaseLayer, populationLayer],
            view: view
        });
        window.map = map;//将map变量存储在全局
        //展示云图
        //showWindYT();
    }
    //鼠标移动显示信息
    function displayFeatureInfo(evt, type) {
        var feature = map.forEachFeatureAtPixel(evt.pixel, function (feature) {
            return feature;
        }, {
                layerFilter: function (ly) {
                    if (ly.getProperties().name == 'companyLayer') {
                        return true;
                    } else {
                        document.getElementById("mapRisk").style.cursor = 'default'
                        return false;
                    }
                }
            });
        if (feature) {
            var featureHighlight = feature;
            var TargetName = featureHighlight.getProperties().TargetName;
            var title = featureHighlight.getProperties().title;
            var gid = featureHighlight.getProperties().gid;
            var AccidentName = featureHighlight.getProperties().AccidentName;
            var IndustryName = featureHighlight.getProperties().IndustryName;
            var Type = featureHighlight.getProperties().Type;
            if (type == 'move') {
                if (Type == 1)
                    str = "<p style='font-size:14px;line-height:20px;color:#00a0e9;font-weight:bold;'>" + title + "</p><p style='font-size:14px;color:#333'>目标类别：" + TargetName + "</p>";
                else
                    str = "<p style='font-size:14px;line-height:20px;color:#00a0e9;font-weight:bold;'>" + title + "</p><p style='font-size:14px;color:#333'>目标类别：" + TargetName + "</p><p style='font-size:14px;color:#333'>行业名称：" + IndustryName + "</p><p style='font-size:14px;color:#333'>事故类型：" + AccidentName + "</p>";
                content.innerHTML = str;
                overlay.setPosition(featureHighlight.getGeometry().getCoordinates());
            } else if (type = 'click') {
                if (clickName == "视频监控") {
                    var url = "/RiskCamera/TestCamera?riskId=" + gid;
                    //DialogWithSanClose(url, "RiskCamera", "视频监控", "100%", "100%");
                    AddTab(gid, url, "视频监控", '/Content/Images/Icon16/folder_user.png', 'true', 'true', 'true');
                }
                else if (clickName == "在线监测") {
                    var url = "/Main/Monitor?riskId=" + gid;
                    DialogWithClose(url, "RiskCamera", "在线监测", "1000", "700");
                }
                //弹出详情
                else {
                    if (Type == 0)
                        AddTab(gid, "/RiskUpdate/RiskDetail", TargetName, '/Content/Images/Icon16/folder_user.png', 'true', 'true');
                }
            }
        } else {
            document.getElementById("mapRisk").style.cursor = 'default'
            content.innerHTML = '';
            overlay.setPosition(undefined);
        }
    }
    //展示风向云图
    var windInt;
    function showWindYT() {
        $('.maplegend').show();
        windYTLayer.setVisible(true);
        temperLayer.setVisible(true);
        var t = 0;
        windInt = setInterval(function () {
            switch (t) {
                case 0:
                    windYTLayer.setSource(new ol.source.ImageWMS({
                        params: {
                            VERSION: '1.1.0',
                            STYLE: '',
                            LAYERS: 'sf:zjk_villagezf_wind1',
                            FORMAT: 'image/png'
                        },
                        url: geoserverUrl + 'sf/wms',
                        projection: projection
                    }));
                    t = 1;
                    break;
                case 1:
                    windYTLayer.setSource(new ol.source.ImageWMS({
                        params: {
                            VERSION: '1.1.0',
                            STYLE: '',
                            LAYERS: 'sf:zjk_villagezf_wind2',
                            FORMAT: 'image/png'
                        },
                        url: geoserverUrl + 'sf/wms',
                        projection: projection
                    }));
                    t = 2;
                    break;
                case 2:
                    windYTLayer.setSource(new ol.source.ImageWMS({
                        params: {
                            VERSION: '1.1.0',
                            STYLE: '',
                            LAYERS: 'sf:zjk_villagezf_wind3',
                            FORMAT: 'image/png'
                        },
                        url: geoserverUrl + 'sf/wms',
                        projection: projection
                    }));
                    t = 3;
                    break;
                case 3:
                    windYTLayer.setSource(new ol.source.ImageWMS({
                        params: {
                            VERSION: '1.1.0',
                            STYLE: '',
                            LAYERS: 'sf:zjk_villagezf_wind4',
                            FORMAT: 'image/png'
                        },
                        url: geoserverUrl + 'sf/wms',
                        projection: projection
                    }));
                    t = 4;
                    break;
                case 4:
                    windYTLayer.setSource(new ol.source.ImageWMS({
                        params: {
                            VERSION: '1.1.0',
                            STYLE: '',
                            LAYERS: 'sf:zjk_villagezf_wind',
                            FORMAT: 'image/png'
                        },
                        url: geoserverUrl + 'sf/wms',
                        projection: projection
                    }));
                    t = 0;
                    break;
                default:
                    windYTLayer.setVisible(false);
                    clearInterval(windInt);
                    windInt = null;
                    break;
            }
        }, 2000);
    }
    //关闭风向云图
    function hideWindYT() {
        if (windInt) {
            clearInterval(windInt);
            windInt = null;
        }
        $('.maplegend').hide();
        windYTLayer.setVisible(false);
        temperLayer.setVisible(false);
    }

    function ShowPopulationLayer() {
        populationLayer.setVisible(true);
    }

    function HidePopulationLayer() {
        populationLayer.setVisible(false);
    }

    function OpenTabs(title) {
        if (title == "大数据分析") {
            var url = "/Main/StaticAnaly";
            AddTabs('', url, title, '/Content/Images/Icon16/chart_stock.png', true, true, true)
        }
    }

    //地图事件设置函数：
    function setMapEvent() {
        map.on('pointermove', function (evt) {
            if (evt.dragging) {
                return;
            }
            document.getElementById("mapRisk").style.cursor = 'pointer'
            //document.getElementById("mapRisk").style.cursor = 'default'
            displayFeatureInfo(evt, 'move');
        });
        map.on('singleclick', function (evt) {
            if (evt.dragging) {
                return;
            }
            displayFeatureInfo(evt, 'click');
        })
    };
    //创建一个Icon
    function createIcon(json) {
        var ur = "";
        if (json.title > 0) {
            ur = "/Content/Images/red_small.png";
        } else {
            ur = "/Content/Images/green_small.png";
        }
        var icon = new BMap.Icon(ur, new BMap.Size(json.icon.w, json.icon.h), { imageOffset: new BMap.Size(-json.icon.l, -json.icon.t), infoWindowOffset: new BMap.Size(json.icon.lb + 5, 1), offset: new BMap.Size(json.icon.x, json.icon.h) })
        return icon;
    }

    initMap();//创建和初始化地图

    function GetQuyuByName() {
        //alert(1);
        $.ajax({
            url: "/TargetType/GetQuYu",
            type: "Get",
            dataType: "json",
            success: function (data) {
                for (var i = 0; i < data.length; i++) {
                    //var a = data[i];
                    var a = data[i].RegionLatlng;
                    //var id = data[i].RegionID;
                    //var name = data[i].Name;
                    //var lat = data[i].NameLat;
                    //var lng = data[i].NameLng;
                    //var b = coordtransform.gcj02tobd09(lng, lat);
                    //var point = new BMap.Point(b[0], b[1]);
                    //var color = data[i].RegionLevle;

                    canvisArea(a);
                    canvisArea3(a);
                    //AddMarker(point, id, name);

                }

            }
        });
    }
    function GetQuyuByName2() {
        //alert(1);
        $.ajax({
            url: "/TargetType/GetQuYu2",
            type: "Get",
            dataType: "json",
            success: function (data) {
                for (var i = 0; i < data.length; i++) {
                    //var a = data[i];
                    var a = data[i].RegionLatlng;

                    canvisArea2(a);
                    //AddMarker(point, id, name);

                }

            }
        });
    }
    function canvisArea(a) {
        var pointArray = [];
        var pointArr = coordtransform.transgeom(a);
        var ply = new BMap.Polygon(pointArr, { strokeWeight: 2, strokeColor: "blue", strokeStyle: 'dashed', strokeOpacity: 1.0, fillColor: "none" }); //建立多边形覆盖物
        map.addOverlay(ply);  //添加覆盖物
        pointArray = pointArray.concat(ply.getPath());
        // map.setViewport(pointArray);    //调整视野
    }
    function canvisArea2(a) {
        var pointArray = [];
        var pointArr = coordtransform.transgeom(a);
        var ply = new BMap.Polyline(pointArr, { strokeWeight: 2, strokeColor: "blue", strokeStyle: 'dashed', strokeOpacity: 1.0, fillColor: "none" }); //建立多边形覆盖物
        map.addOverlay(ply);  //添加覆盖物
        pointArray = pointArray.concat(ply.getPath());
        // map.setViewport(pointArray);    //调整视野
    }

    function canvisArea3(a) {
        var pointArray = [];
        var pointArr = coordtransform.transgeom(a);
        var ply = new BMap.Polygon(pointArr, { strokeWeight: 8, strokeColor: "#e26ca6", strokeOpacity: 0.6, strokeStyle: 'solid', fillOpacity: 0.3, fillColor: "#fff100" }); //建立多边形覆盖物
        //ply.setFillOpacity(0.1);
        map.addOverlay(ply);  //添加覆盖物

        pointArray = pointArray.concat(ply.getPath());
    }

    function canvisArea4(a) {
        var pointArray = [];
        var pointArr = a;
        var ply = new BMap.Polygon(pointArr, { strokeWeight: 2, strokeColor: "none", strokeStyle: 'dashed', fillOpacity: 0.7, fillColor: "#d6847c" }); //建立多边形覆盖物
        //ply.setFillOpacity(0.1);
        map.addOverlay(ply);  //添加覆盖物

        pointArray = pointArray.concat(ply.getPath());
        //ply.setFillColor("#000");
    }

    function ClearMap() {
        $(".trade-list div").each(function () {
            $(this).removeClass("active");
        })
        $(".area-box div div").each(function () {
            $(this).removeClass("active");
        })
        if (map) {
            //countyLayer.setVisible(false);
            companyLayer.getSource().clear();
            content.innerHTML = '';
            overlay.setPosition(undefined);
        }
    }
</script>

<script type="text/javascript">
    var countySource = 0;
    $(function () {
        GetMain();
        GetHomeMark();

        $(".title a").click(function () {
            $(this).addClass("select").siblings().removeClass("select");
            if ($(this).text() == "县") {
                $.ajax({
                    url: "/Main/GetAreaInfoXian",
                    type: "post",
                    dataType: "json",
                    success: function (data) {
                        var html = "";
                        if (data.length > 0) {
                            for (var i = 0; i < data.length; i++) {
                                html += "<div><div onclick='GetMap(this)'><span>" + data[i].Name + "</span><strong class='" + data[i].Color + "'>" + data[i].Count + "</strong></div></div>";
                            }
                        }
                        //alert(html);
                        $(".area-box").empty();
                        $(".area-box").append(html);
                    }
                })
            }
            else {
                $.ajax({
                    url: "/Main/GetAreaInfoQu",
                    type: "post",
                    dataType: "json",
                    success: function (data) {
                        var html = "";
                        if (data.length > 0) {
                            for (var i = 0; i < data.length; i++) {
                                html += "<div><div onclick='GetMap(this)'><span>" + data[i].Name + "</span><strong class='" + data[i].Color + "'>" + data[i].Count + "</strong></div></div>";
                            }
                        }
                        //alert(html);
                        $(".area-box").empty();
                        $(".area-box").append(html);
                    }
                })
                //$(".area-box").empty();
            }
        })

        $("#add_tab div").click(function () {
            var text=$(this).find("span").text();
            //alert(text);
            var url = "";
            if (text == "区域风险分析")
                url = "/Main/AreaRiskAnalysis";
            else if(text == "行业风险分析")
                url = "/Main/IndustryRiskAnalysis";
            else if (text == "企业风险分析")
                url = "/Main/AccidentRiskAnalysis";
            AddTab(1, url, text, '/Content/Images/Icon16/folder_user.png', 'true', 'true', 'true');
        })

        $("#RiskList").click(function () {
            var url = "/Main/RiskList";
            AddTab(2, url, "风险清单", '/Content/Images/Icon16/folder_user.png', 'true', 'true', 'true');
        })

        $(".four-list div").click(function () {
            clickName = "";
            $(this).addClass("active").siblings().removeClass("active");
            $(".left-bottom div").removeClass("active");

            $.ajax({
                url: "/Main/MapTargetData",
                data: { "text": $(this).find("dt").text() },
                type: "post",
                dataType: "json",
                success: function (data) {
                    addMarker(data);

                }
            })
        })

        $(".clearHistory").click(function () {
            ClearMap();
        })

        //切换四色图
        $('.guan').click(function () {
            if (countySource === 0) {
                countyLayer.setVisible(false);
                factoryLayer.setVisible(false);
                countySource = 1;
            } else {
                countySource = 0;
                countyLayer.setVisible(true);
                factoryLayer.setVisible(true);
            }

        });
        $(".clear-btn").click(function () {
            clickName = "";
            $(".trade-list div").each(function () {
                $(this).removeClass("active");
            })
            $(".area-box div div").each(function () {
                $(this).removeClass("active");
            })
            //initMap();
            if (map) {
                countyLayer.setVisible(false);
                companyLayer.getSource().clear();
                content.innerHTML = '';
                overlay.setPosition(undefined);
            }
        })

        $("#serchTxt").autocomplete('/Gs_Risk/GetName',
              {
                  httpMethod: "POST",
                  minChars: 0,
                  max: 100000,
                  width: $("#serchTxt").width(),
                  selectFirst: true,
                  cacheLength: 1,
                  scrollHeight: 400,
                  parse: function (data) {
                      if (data.length > 0) {

                          if ($("#serchTxt").val().trim() != null && $("#serchTxt").val().trim() != "") {
                              return $.map(eval(data), function (row) {
                                  return {
                                      data: row,
                                      value: row.KeyWork, //此处无需把全部列列出来，只是两个关键列
                                      result: row.KeyValue
                                  }
                              });
                          }
                          else {
                              $(".ac_results").hide();
                              $("#search_detatil").hide();
                          }
                      }
                  },
                  formatItem: function (row, i, max) {
                      return "<div  id='" + row.KeyWork + "' class='detail_search' title='" + row.KeyValue + "'>" + row.KeyValue + "</div>";  //+ obj.city + "<br /> ";
                  }
              }).result(function (event, data, formatted) {
                  $("#serchTxt").val(data.KeyValue);
                  //GetDetail();
                  GetPoint();
              });

        $(".right-list3").click(function () {
            $(".trade-list div").each(function () {
                $(this).removeClass("active");
            })
            $(".area-box div div").each(function () {
                $(this).removeClass("active");
            })
            if (map) {
                companyLayer.getSource().clear();
                content.innerHTML = '';
                overlay.setPosition(undefined);
            }
            $(this).addClass("active").siblings().removeClass("active");
            $(".four-list div").removeClass("active");
            clickName = "视频监控";
            GetQuYuCount();
        })


        $(".right-list2").click(function () {
            $(".trade-list div").each(function () {
                $(this).removeClass("active");
            })
            $(".area-box div div").each(function () {
                $(this).removeClass("active");
            })
            if (map) {
                //countyLayer.setVisible(false);
                companyLayer.getSource().clear();
                content.innerHTML = '';
                overlay.setPosition(undefined);
            }
            $(this).addClass("active").siblings().removeClass("active");
            $(".four-list div").removeClass("active");
            clickName = "在线监测";
            GetMonitorCount();
        })

        $(".trade-list div").click(function () {
            clickName = "";
            $(".area-box div div").each(function () {
                $(this).removeClass("active");
            })
            if ($(this).hasClass("active"))
                $(this).removeClass("active");
            else
                $(this).addClass("active");

            var AccessoryJson = new Array();
            $(".trade-list div.active").each(function () {
                var Accessory = {
                    Name: "行业风险",  //行业风险选择
                    Static: $(this).find("span").text()
                };
                AccessoryJson.push(JSON.stringify(Accessory));
            })

            var postData = "{\"AccessoryJson\":[" + eval(AccessoryJson) + "]}";

            if (AccessoryJson.length > 0) {
                var postData = "{\"AccessoryJson\":[" + eval(AccessoryJson) + "]}";
                $.ajax({
                    url: "/Main/MapIndustryData",
                    data: { "postData": postData },
                    type: "post",
                    dataType: "json",
                    success: function (data) {
                        addMarker(data);
                        $(".list-child").hide();
                    }
                })
            }
            else {
                //initMap();
                clearMap();
                return false;
            }
        })

        $(".area-box div").click(function () {
            //alert($(this).find("span").text());
            //locateToCounty($(this).find("span").text());
            clickName = "";
            $(".trade-list div").each(function () {
                $(this).removeClass("active");
            })
            if ($(this).hasClass("active"))
                $(this).removeClass("active");
            else {
                locateToCounty($(this).find("span").text());
                $(this).addClass("active");
            }

            var AccessoryJson = new Array();
            $(".area-box div div.active").each(function () {
                var Accessory = {
                    Name: "区域风险",  //行业风险选择
                    Static: $(this).find("span").text()
                };
                AccessoryJson.push(JSON.stringify(Accessory));
            })

            var postData = "{\"AccessoryJson\":[" + eval(AccessoryJson) + "]}";

            if (AccessoryJson.length > 0) {
                var postData = "{\"AccessoryJson\":[" + eval(AccessoryJson) + "]}";
                $.ajax({
                    url: "/Main/MapIndustryData",
                    data: { "postData": postData },
                    type: "post",
                    dataType: "json",
                    success: function (data) {
                        addMarker(data);
                        $(".list-child").hide();
                    }
                })
            }
            else {
                //initMap();
                clearMap();
                return false;
            }
        })
        

        //底图切换
        $("#nowLayer").on("mouseover", function () {
            $("#hideLayer").animate({ "right": "103px" }, 'fast');
        });
        $(".map-change-btn").on("mouseleave", function () {
            $("#hideLayer").animate({ "right": "20px" }, 'fast');
        });
        $('#hideLayer').click(function () {
            $("#hideLayer").animate({ "right": "20px" }, 'fast');
            var imgBack = $("#hideLayer").css('background');
            $("#hideLayer").css("background", $("#nowLayer").css('background'));
            $("#nowLayer").css("background", imgBack);
            if (googleRasterLayer.getVisible()) {
                googleRasterLayer.setVisible(false);
                googleMapLayer.setVisible(true);
            } else {
                googleRasterLayer.setVisible(true);
                googleMapLayer.setVisible(false);
            }
        });
        //缓冲 todo
        $('#bufferDiv i').click(function () {
            var t = $(this).text();
            switch(t){
                case '点缓冲区分析':
                    layer.closeAll();
                    layer.open({
                        type: 2,
                        title: '缓冲分析',
                        shade: 0,
                        area: ['260px', '160px'],
                        content: '/Main/Buffer?type=point',
                        end: function () {
                            bufferLayer.getSource().clear();
                        }
                    })
                    break;
                case '线缓冲区分析':
                    layer.closeAll();
                    layer.open({
                        type: 2,
                        title: '缓冲分析',
                        shade: 0,
                        area: ['260px', '160px'],
                        content: '/Main/Buffer?type=line',
                        end: function () {
                            bufferLayer.getSource().clear();
                        }
                    })
                    break;
                case '面缓冲区分析':
                    layer.closeAll();
                    layer.open({
                        type: 2,
                        title: '缓冲分析',
                        shade: 0,
                        area: ['260px', '160px'],
                        content: '/Main/Buffer?type=polygon',
                        end: function () {
                            bufferLayer.getSource().clear();
                        }
                    })
                    break;
                case '清除缓冲区分析':
                    bufferLayer.getSource().clear();
                    layer.closeAll();
                    break;
            }
        });
        //模型
        $('#moniDiv i').click(function () {
            var t = $(this).text();
            switch(t){
                case '毒气':
                    layer.closeAll();
                    layer.open({
                        type: 2,
                        title: '毒气',
                        shade:0,
                        area:['500px','400px'],
                        content: '/Main/Poison',
                        end: function () {
                            analysisLyr.getSource().clear();
                            vectorLyr.getSource().clear();
                        }
                    });
                break;
                case '爆炸':
                    layer.closeAll();
                    layer.open({
                        type: 2,
                        title: '爆炸',
                        shade: 0,
                        area: ['500px', '300px'],
                        content: '/Main/Boom',
                        end: function () {
                            analysisLyr.getSource().clear();
                            vectorLyr.getSource().clear();
                        }
                    });
                 break;
                case '火灾':
                    layer.closeAll();
                    layer.open({
                        type: 2,
                        title: '火灾',
                        shade: 0,
                        area: ['500px', '500px'],
                        content: '/Main/Fire',
                        end: function () {
                            analysisLyr.getSource().clear();
                            vectorLyr.getSource().clear();
                        }
                    });
                 break;
            }
        });
        $(".right-list-child").click(function () {
            $(this).addClass("active").siblings().removeClass("active");
            $(".four-list div").removeClass("active");
            clickName = "";
            $(".trade-list div").each(function () {
                $(this).removeClass("active");
            })
            $(".area-box div div").each(function () {
                $(this).removeClass("active");
            })

            //yingjiattr = $(this).children("a").attr("attr");
            //alert($(this).children("a").attr("attr"));
            //alert(yingjiattr);
            $.ajax({
                url: "/Main/MapDataByQuyu",
                //data: { "industryTypeId": $(this).children("a").attr("attr") },
                type: "post",
                dataType: "json",
                success: function (data) {
                    //alert(1);
                    addMarkerEmergency(data);
                }
            })
        })

        $(".trade-class li").click(function () {
            $(this).addClass("active").siblings().removeClass("active");
            $.ajax({
                url: "/Main/GetIndustryList",
                type: "post",
                data: { "text": $(this).text() },
                dataType: "json",
                success: function (data) {
                    var html = "";
                    for (var i = 0; i < data.length; i++) {
                        if (i < 8) {
                            html += "<div onclick='GetIndustryData(this)'><span>" + data[i].Name + "</span><strong>" + data[i].Count + "</strong></div>";
                        }
                    }
                    $(".trade-list").empty();
                    $(".trade-list").append(html);
                }
            })
        })

        $(".four-color a").click(function () {
            clickName = "";
            $(".trade-list div").each(function () {
                $(this).removeClass("active");
            })
            $(".area-box div div").each(function () {
                $(this).removeClass("active");
            })
            var str = $(this).text();
            //alert(str.trim());
            $.ajax({
                url: "/Main/GetTargetMap",
                type: "post",
                data: { "text": str.trim() },
                dataType: "json",
                success: function (data) {
                    addMarker(data);

                }
            })
        })

        $(".maprescue a").click(function () {
            clickName = "";
            $(".trade-list div").each(function () {
                $(this).removeClass("active");
            })
            $(".area-box div div").each(function () {
                $(this).removeClass("active");
            })
            var str = $(this).text();
            //alert(str.trim());
            $.ajax({
                url: "/Main/GetEmergencyResourceMap",
                type: "post",
                data: { "text": str.trim() },
                dataType: "json",
                success: function (data) {
                    addMarkerByEmergencyResource(data);

                }
            })
        })
    })

    function GetMap(obj) {
        clickName = "";
        $(".trade-list div").each(function () {
            $(this).removeClass("active");
        })
        if ($(obj).hasClass("active"))
            $(obj).removeClass("active");
        else {
            locateToCounty($(obj).find("span").text());
            $(obj).addClass("active");
        }

        var AccessoryJson = new Array();
        $(".area-box div div.active").each(function () {
            var Accessory = {
                Name: "区域风险",  //行业风险选择
                Static: $(this).find("span").text()
            };
            AccessoryJson.push(JSON.stringify(Accessory));
        })

        var postData = "{\"AccessoryJson\":[" + eval(AccessoryJson) + "]}";

        if (AccessoryJson.length > 0) {
            var postData = "{\"AccessoryJson\":[" + eval(AccessoryJson) + "]}";
            $.ajax({
                url: "/Main/MapIndustryData",
                data: { "postData": postData },
                type: "post",
                dataType: "json",
                success: function (data) {
                    addMarker(data);
                    $(".list-child").hide();
                }
            })
        }
        else {
            //initMap();
            clearMap();
            return false;
        }
    }

    function GetIndustryData(obj) {
        clickName = "";
        $(".area-box div div").each(function () {
            $(this).removeClass("active");
        })
        if ($(obj).hasClass("active"))
            $(obj).removeClass("active");
        else
            $(obj).addClass("active");

        var AccessoryJson = new Array();
        $(".trade-list div.active").each(function () {
            var Accessory = {
                Name: "行业风险",  //行业风险选择
                Static: $(this).find("span").text()
            };
            AccessoryJson.push(JSON.stringify(Accessory));
        })

        var postData = "{\"AccessoryJson\":[" + eval(AccessoryJson) + "]}";

        if (AccessoryJson.length > 0) {
            var postData = "{\"AccessoryJson\":[" + eval(AccessoryJson) + "]}";
            $.ajax({
                url: "/Main/MapIndustryData",
                data: { "postData": postData },
                type: "post",
                dataType: "json",
                success: function (data) {
                    addMarker(data);
                    $(".list-child").hide();
                }
            })
        }
        else {
            //initMap();
            clearMap();
            return false;
        }
    }


    function GetMain() {
        $('#SafeNum').highcharts({
            chart: {
                type: 'gauge',
                borderWidth: 0,
                backgroundColor: 'rgba(0,0,0,0)',
                plotBackgroundImage: null,
                plotShadow: false,
                plotBorderWidth: 0
            },
            credits: {
                enabled: false
            },
            pane: {
                startAngle: -150,
                endAngle: 150,
                center: ['50%', '50%'],
                size: 130,
                background: [{
                    backgroundColor: null,
                    borderWidth: 0,
                    outerRadius: '109%'
                }, {
                    backgroundColor: null,
                    borderWidth: 1,
                    outerRadius: '107%'
                }, {
                    backgroundColor: '#DDD',
                    borderWidth: 0,
                    outerRadius: '105%',
                    innerRadius: '103%'
                }]
            },
            title: {
                text: '风险值(市)',
                align: 'left',
                y: -20,
                floating: true,
                style: {
                    fontSize: "16px",
                    color: '#57AF4C',
                    fontWeight: 'bold',
                    fontFamily: '微软雅黑, 宋体, Arial, Helvetica, Verdana, sans-serif'
                }
            },
            yAxis: {
                min: 0,
                max: 2000,
                minorTickInterval: 'auto',
                minorTickWidth: 1,
                minorTickLength: 10,
                minorTickPosition: 'inside',
                minorTickColor: '#666',

                title: {
                    text: '<br/><span style="font-size:18px">风险值</span>',
                    style: {
                        color: '@ViewData["currentColor"]',
                        fontSize: '14px',
                        fontFamily: 'Trebuchet MS, Verdana, sans-serif'
                    }
                },
                tickPixelInterval: 50,
                tickWidth: 2,
                tickPosition: 'inside',

                tickColor: '#666',
                labels: {
                    step: 1,
                    rotation: 'auto',
                    style: {
                        color: '#000',
                        font: '11px Trebuchet MS, Verdana, sans-serif',
                        width: '60px'
                    }
                },
                plotBands: [{
                    from: 0,
                    to: 150,
                    color: '#0066cc' // green
                }, {
                    from: 150,
                    to: 300,
                    color: '#f4ea2a' // yellow
                }, {
                    from: 300,
                    to: 1000,
                    color: '#f4a12b' // red
                }, {
                    from: 1000,
                    to: 2000,
                    color: '#ff0b0b'
                }]
            },

            series: [{
                name: '安全指数',
                data: [@ViewData["RiskData"]]

            }]
        });
    }

    function GetQuYuCount() {
        $.ajax({
            url: "/RiskCamera/MapDataByQuyu",
            type: "post",
            dataType: "json",
            success: function (data) {
                //alert(1);
                addMarkerCamera(data);
            }
        })
    }

    function GetMonitorCount() {
        $.ajax({
            url: "/Main/MapDataByMonitor",
            type: "post",
            dataType: "json",
            success: function (data) {
                //alert(1);
                addMarkerMonitor(data);
            }
        })
    }

    function GetHomeMark() {
        //alert($(".four-list div").eq(0).find("dt").text());
        clickName = "";
        //alert($(this).find("dt").text());
        $.ajax({
            url: "/Main/MapTargetData",
            data: { "text": $(".four-list div").eq(0).find("dt").text() },
            type: "post",
            dataType: "json",
            success: function (data) {
                addMarker(data);

            }
        })
    }

    function GetPoint() {
        //alert($("#serchTxt").val());
        $.ajax({
            url: "/Main/GetMapPoint",
            data: { "search": $("#serchTxt").val() },
            type: "Post",
            dataType: "json",
            success: function (RDate) {
                //$("#main ul.nav li ul li h3.selected").each(function () {
                //    $(this).removeClass("selected");
                //});
                addMarker(RDate);
            }
        })
    }

    function backCenter() {
        if (map) {
            view.setZoom(zoom);
            view.setCenter(center);
        }
    }

    function addMarker(data) {
        //alert(1);
        clearMap();
        //initMap();
        var count = 0;
        var features = [];
        for (var i = 0; i < data.length; i++) {
            var str = "";
            var json = data[i];
            var p0 = json.lo;
            var p1 = json.la;
            var c = coordtransform.latLng2WebMercator(p0, p1);
            var f = new ol.Feature({
                geometry: new ol.geom.Point(c),
                TargetName: data[i].TargetName,
                title: data[i].title,
                gid: data[i].id,
                AccidentName: data[i].AccidentName,
                IndustryName: data[i].IndustryName,
                Type: 0
            });
            var img = "";
            img = GetImg(json.TargetName, json.RatingColor);
            f.setStyle(new ol.style.Style({
                image: new ol.style.Icon({
                    src: "/Content/Images/" + img,
                    crossOrigin: 'anonymous',
                    size: [26, 26],
                    anchor: [0.5, 0.5]
                })
            }));
            features.push(f);
        }
        companyLayer.getSource().addFeatures(features);
    }

    function addMarkerByEmergencyResource(data) {
        clearMap();
        //initMap();
        var count = 0;
        var features = [];
        for (var i = 0; i < data.length; i++) {
            var str = "";
            var json = data[i];
            var p0 = json.lo;
            var p1 = json.la;
            var c = coordtransform.latLng2WebMercator(p0, p1);
            var f = new ol.Feature({
                geometry: new ol.geom.Point(c),
                TargetName: data[i].TargetName,
                title: data[i].title,
                gid: data[i].id,
                Type: 1
            });
            var img = "";
            img = GetImgByEmergencyResource(json.TargetName);
            f.setStyle(new ol.style.Style({
                image: new ol.style.Icon({
                    src: "/Content/Images/Search/" + img,
                    crossOrigin: 'anonymous',
                    size: [26, 26],
                    anchor: [0.5, 0.5]
                })
            }));
            features.push(f);
        }
        companyLayer.getSource().addFeatures(features);
    }

    function addMarkerEmergency(data) {
        clearMap();
        //initMap();
        var count = 0;
        var features = [];
        for (var i = 0; i < data.length; i++) {
            var str = "";
            var json = data[i];
            var p0 = json.lo;
            var p1 = json.la;
            var c = coordtransform.latLng2WebMercator(p0, p1);
            var f = new ol.Feature({
                geometry: new ol.geom.Point(c),
                TargetName: data[i].TargetName,
                title: data[i].title,
                gid: data[i].id,
                AccidentName: data[i].AccidentName,
                IndustryName: data[i].IndustryName

            });
            var img = "";
            img = GetEMERGENCYSOURCEImg(json.TargetName);
            f.setStyle(new ol.style.Style({
                image: new ol.style.Icon({
                    src: "/Content/Images/" + img,
                    crossOrigin: 'anonymous',
                    size: [36, 48],
                    anchor: [0.5, 0.5]
                })
            }));
            features.push(f);
        }
        companyLayer.getSource().addFeatures(features);
    }

    function GetImg(title, color) {
        if (title == "重大风险点") {
            return "RiskPoints-" + color + ".png";
        }
        else if (title == "重大隐患") {
            return "Hidden-" + color + ".png";
        }
        else if (title == "重大危险源") {
            return "HazardSources-" + color + ".png";
        }
        else if (title == "脆弱性目标") {
            return "TargetVulnerability-" + color + ".png";
        }
    }

    function GetImgByEmergencyResource(title) {
        if (title == "救护队") {
            return "mapicon12-map.png";
        }
        else if (title == "避难场所") {
            return "mapicon13-map.png";
        }
        else if (title == "医院") {
            return "mapicon14-map.png";
        }
        else if (title == "应急装备") {
            return "mapicon15-map.png";
        }
        else if (title == "应急物资") {
            return "mapicon16-map.png";
        } else {
            return '';
        }
    }

    function addMarkerCamera(data) {
        clearMap();
        //initMap();
        var count = 0;
        var features = [];
        for (var i = 0; i < data.length; i++) {
            var str = "";
            var json = data[i];
            var p0 = json.lo;
            var p1 = json.la;
            var c = coordtransform.latLng2WebMercator(p0, p1);
            var f = new ol.Feature({
                geometry: new ol.geom.Point(c),
                TargetName: data[i].TargetName,
                title: data[i].title,
                gid: data[i].id,
                AccidentName: data[i].AccidentName,
                IndustryName: data[i].IndustryName

            });
            var img = "";
            //img = GetEMERGENCYSOURCEImg(json.TargetName);
            f.setStyle(new ol.style.Style({
                image: new ol.style.Icon({
                    src: "/Content/Images/icon-1.png",
                    crossOrigin: 'anonymous',
                    size: [33, 42],
                    anchor: [0.5, 0.5]
                })
            }));
            features.push(f);
        }
        companyLayer.getSource().addFeatures(features);
    }

    function addMarkerMonitor(data) {
        clearMap();
        //initMap();
        var count = 0;
        var features = [];
        for (var i = 0; i < data.length; i++) {
            var str = "";
            var json = data[i];
            var p0 = json.lo;
            var p1 = json.la;
            var c = coordtransform.latLng2WebMercator(p0, p1);
            var f = new ol.Feature({
                geometry: new ol.geom.Point(c),
                TargetName: data[i].TargetName,
                title: data[i].title,
                gid: data[i].id,
                AccidentName: data[i].AccidentName,
                IndustryName: data[i].IndustryName

            });
            var img = "";
            //img = GetEMERGENCYSOURCEImg(json.TargetName);
            f.setStyle(new ol.style.Style({
                image: new ol.style.Icon({
                    src: "/Content/Images/icon1_1.png",
                    crossOrigin: 'anonymous',
                    size: [33, 42],
                    anchor: [0.5, 0.5]
                })
            }));
            features.push(f);
        }
        companyLayer.getSource().addFeatures(features);
    }

    function GetEMERGENCYSOURCEImg(title) {
        if (title == "消防队") {
            return "xiaofang.png";
        }
        else if (title == "避难场所") {
            return "binan.png";
        }
        else if (title == "医疗救护") {
            return "yiliao.png";
        }
        else if (title == "防洪设施") {
            return "fanghong.png";
        }
    }

    //清空企业和弹出
    function clearMap() {
        document.getElementById("mapRisk").style.cursor = 'default'
        if (map) {
            companyLayer.getSource().clear();
            content.innerHTML = '';
            overlay.setPosition(undefined);
        }
    }

    //添加（宋）tab页
    function AddTab(tabid, url, title, img, Isclose, IsReplace, isButton) {
        if (parent.$('#tt').tabs("exists", "<span class='tt-inner'><img src='" + img + "'/>" + title + "</span>") && IsReplace) {
            parent.$('#tt').tabs('select', "<span class='tt-inner'><img src='" + img + "'/>" + title + "</span>");
        } else {

            if (parent.$('.tabs').find("li").length >= 10) {
                parent.$("#tt").tabs("close", 1);
                //AlertDialog("为保证系统效率,只允许同时运行10个功能窗口,请关闭一些窗口后重试！");
                // return false;
            }
            if (isButton) {
                parent.$('#tt').tabs('add', {
                    title: "<span class='tt-inner'><img src='" + img + "'/>" + title + "</span>",
                    content: "<iframe id=\"tabs_iframe_" + tabid + "\" style='min-width:850px;display:block' name=\"tabs_iframe_" + tabid + "\" height='100%' width='100%' src=\"" + url + "\" frameBorder=\"0\" ></iframe>",
                    closable: Isclose
                });
            } else {
                parent.$('#tt').tabs('add', {
                    title: "<span class='tt-inner'><img src='" + img + "'/>" + title + "</span>",
                    content: "<iframe id=\"tabs_iframe_" + tabid + "\" style='min-width:850px;display:block' name=\"tabs_iframe_" + tabid + "\" height='100%' width='100%' src=\"" + url + "?id=" + tabid + "\" frameBorder=\"0\" ></iframe>",
                    closable: Isclose
                });
            }

        }
    }
    //定位到区县 name 区县名称
    function locateToCounty(countyName) {
        countyLayer.getSource().forEachFeature(function (f) {
            var name = f.getProperties().NAME;
            var shiqu = ['桥西区','宣化区','桥东区','下花园区','万全区','崇礼区'];
            if ($.inArray(countyName, shiqu)!=-1){
                countyName = '市区';
            }
            if (name && name === countyName) {
                view.fit(f.getGeometry(), map.getSize());
            }
        })
    }
    $(document).ready(function () {
        $("#maptool li a").click(function () {
            if ($(this).siblings().is(":hidden")) {
                $(this).siblings().show();
            }
            else {
                $(this).siblings().hide();
            }
        });
        $("#mapmo li a").click(function () {
            if ($(this).siblings().is(":hidden")) {
                $(this).siblings().show();
            }
            else {
                $(this).siblings().hide();
            }
        });
        $("#mapweather a").toggle(function () {
            $(this).css("background", "#30c0c9");
            $(this).find("img").attr("src", $(this).find("img").attr("src").replace(".png", "-sel.png"));
            if ($(this).attr("attr") == "云图") {
                showWindYT();
                $(this).attr("title", "关闭云图");
            }
            else {
                ShowPopulationLayer();
                $(this).attr("title", "关闭人口分布图");
            }
        }, function () {
            $(this).css("background", "url(../../Content/Images/Search/bg_mapweather.png) no-repeat");
            $(this).find("img").attr("src", $(this).find("img").attr("src").replace("-sel.png", ".png"));
            if ($(this).attr("attr") == "云图") {
                hideWindYT();
                $(this).attr("title", "打开云图");
            }
            else {
                HidePopulationLayer();
                $(this).attr("title", "查看人口分布图");
            }
        })
    })
</script>
