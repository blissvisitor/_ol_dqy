@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Share/_Layout.cshtml";
}
<html>
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=Edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>首页</title>
    <link href="js/bootstrap/css/bootstrap.min.css" rel="stylesheet" media="screen">
    <link rel="stylesheet" href="css/base.css">
    <link rel="stylesheet" href="css/index.css">

    <script src="js/bootstrap/js/jquery-3.0.0.min.js"></script>
    <script src="js/bootstrap/js/bootstrap.min.js"></script>
    <script src="js/common.js"></script>

    <link href="~/Content/js/openlayers/ol.css" rel="stylesheet" />
    <!-- The line below is only needed for old environments like Internet Explorer and Android 4.x -->
    <script src="https://cdn.polyfill.io/v2/polyfill.min.js?features=requestAnimationFrame,Element.prototype.classList,URL"></script>
    <script src="~/Content/js/openlayers/ol.js"></script>
</head>
<body>
    <header class="navbar-fixed-top">
        <div class="header">
            大兴区北臧村镇坟墓信息系统
        </div>
    </header>
    <div class="container-fuild main-box">
        <div class="project-box Dbg">
            <div class="project-left">
                <div class="table-select">
                    <div class="form-group">
                        <div class="col-md-6">
                            <input type="hidden" value="" id="geom" />
                            <input class="form-control" type="text" placeholder="坟墓编号/死者名称" id="fdno" />
                        </div>
                        <div class="col-md-6" style="vertical-align:middle">
                            <input type="hidden" id="szsex" value="" />
                            <input type="radio" name="rdo" value="0" style="margin-left:20px;height:20px; width:20px; vertical-align:middle" />男<input type="radio" name="rdo" value="1" style="margin-left:10px;height:20px;width:20px; vertical-align:middle" />女
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-6">
                            <input class="form-control" type="text" placeholder="家属姓名" id="jsname" />
                        </div>
                        <div class="col-md-6" style="vertical-align:middle">
                            <input type="hidden" id="ishh" value="" />
                            <input type="radio" name="btn" value="0" style="margin-left:20px;height:20px; width:20px; vertical-align:middle" />未火化<input type="radio" name="btn" value="1" style="margin-left:10px;height:20px;width:20px; vertical-align:middle" />火化
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-6">
                            <input type="hidden" id="isqf" value="" />
                            <input type="radio" name="btnRad" value="0" style="margin-left:20px;height:20px; width:20px; vertical-align:middle" />放弃<input type="radio" name="btnRad" value="1" style="margin-left:10px;height:20px;width:20px; vertical-align:middle" />迁坟
                        </div>
                        <div class="col-md-6 btn-box">
                            <button type="button" class="mybtn" onclick="drawPoly()">绘制</button>
                            <button type="button" class="mybtn" onclick="clearDraw()">清除绘制</button>
                            <button type="button" class="mybtn" onclick="Search()">查询</button>
                            <button type="button" class="mybtn" onclick="Statics()">统计</button>
                        </div>
                    </div>
                </div>
                <div class="table-box">
                    <table class="table table-hover" id="gridList">
                        @*  <tr>
                                <th>行号</th>
                                <th>坟地编号</th>
                                <th>死者姓名</th>
                                <th>死亡时间</th>
                            </tr>
                            <tr>
                                <td>1</td>
                                <td>234567</td>
                                <td>李李李</td>
                                <td>
                                    <span class="table-icon see" title="搜索"></span>
                                    <span class="table-icon del" title="删除"></span>
                                </td>
                            </tr>
                            <tr>
                                <td>2</td>
                                <td>项目一</td>
                                <td>在线</td>
                                <td>
                                    <span class="table-icon see" title="搜索"></span>
                                    <span class="table-icon del" title="删除"></span>
                                </td>
                            </tr>*@
                    </table>
                </div>
            </div>
            <div class="project-right map-box">
                @*<div class="map-btn">
                        <button type="button" class="mybtn">保存</button>
                    </div>*@
                <div id="map" class="map">
                    <div id="popup" class="ol-popup">
                        <a href="#" id="popup-closer" class=""></a>
                        <div id="popup-content"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <footer class="footer">
        版权所有：大兴区交通局
    </footer>
</body>
</html>
<script type="text/javascript">
    var rdo = 0;
    var rdotext = "";
    var btn = 0;
    var btntext = "";
    var btnRad = 0;
    var btnRadtext = "";
    $(function () {
        $("input[name=rdo]").click(function () {
            if ($(this).prop("checked") && rdo != 0 && rdotext == $(this).val()) {
                $(this).prop("checked", false);
                rdo = 0;
            } else {
                rdo++;
                rdotext = $(this).val();
            }

        })
        $("input[name=btn]").click(function () {
            if ($(this).prop("checked") && btn != 0 && btntext == $(this).val()) {
                $(this).prop("checked", false);
                btn = 0;
            } else {
                btn++;
                btntext = $(this).val();
            }

        })
        $("input[name=btnRad]").click(function () {
            if ($(this).prop("checked") && btnRad != 0 && btnRadtext == $(this).val()) {
                $(this).prop("checked", false);
                btnRad = 0;
            } else {
                btnRad++;
                btnRadtext = $(this).val();
            }

        })
        GetDataGrid();
    })
    //统计
    function Statics() {
        $("#szsex").val("");
        $("#ishh").val("");
        $("#isqf").val("");
        $("input[name=rdo]").each(function () {
            if ($(this).prop("checked")) {
                $("#szsex").val($(this).val());
                return;
            }
        })
        $("input[name=btn]").each(function () {
            if ($(this).prop("checked")) {
                $("#ishh").val($(this).val());
                return;
            }
        })
        $("input[name=btnRad]").each(function () {
            if ($(this).prop("checked")) {
                $("#isqf").val($(this).val());
                return;
            }
        })
        layer.open({
            type: 2,
            title: " ",
            shade: 0.6,
            area: ['700px', '500px'],
            border: [0, 0, false],
            closeBtn: 2,
            shadeClose: true,
            skin: 'yourclass',
            content: '/Home/Statics?fdno=' + $("#fdno").val() + '&szsex=' + $("#szsex").val() + '&jsname=' + $("#jsname").val() + '&ishh=' + $("#ishh").val() + '&isqf=' + $("#isqf").val()
        });
    }
    //坟地编辑
    function editItem(fdid, fdmanid) {
        layer.open({
            type: 2,
            title: " ",
            shade: 0.6,
            area: ['700px', '360px'],
            border: [0, 0, false],
            closeBtn: 2,
            shadeClose: true,
            skin: 'yourclass',
            content: '/Home/EditFd?fdid=' + fdid + '&fdmanid=' + fdmanid
        });
    }
    /**
 * 合并单元格
 *   data  原始数据（在服务端完成排序）
 *  fieldName 合并属性名称
 *   colspan   合并列
 *   target    目标表格对象
 */
    function mergeCells(data, fieldName, colspan, target) {
        //声明一个map计算相同属性值在data对象出现的次数和
        var sortMap = {};
        for (var i = 0 ; i < data.length ; i++) {
            for (var prop in data[i]) {
                if (prop == fieldName) {
                    var key = data[i][prop]
                    if (sortMap.hasOwnProperty(key)) {
                        sortMap[key] = sortMap[key] * 1 + 1;
                    } else {
                        sortMap[key] = 1;
                    }
                    break;
                }
            }
        }
        for (var prop in sortMap) {
            console.log(prop, sortMap[prop])
        }
        var index = 0;
        for (var prop in sortMap) {
            var count = sortMap[prop] * 1;
            $(target).bootstrapTable('mergeCells', { index: index, field: fieldName, colspan: colspan, rowspan: count });
            index += count;
        }
    }
    //查询
    function Search() {
        locateLayer.getSource().clear();
        $("#gridList").bootstrapTable('destroy');
        GetDataGrid();
    }
    //卷宗编号
    function GetDataGrid() {
        $("#szsex").val("");
        $("#ishh").val("");
        $("#isqf").val("");
        $("input[name=rdo]").each(function () {
            if ($(this).prop("checked")) {
                $("#szsex").val($(this).val());
                return;
            }
        })
        $("input[name=btn]").each(function () {
            if ($(this).prop("checked")) {
                $("#ishh").val($(this).val());
                return;
            }
        })
        $("input[name=btnRad]").each(function () {
            if ($(this).prop("checked")) {
                $("#isqf").val($(this).val());
                return;
            }
        })
        var columns = [
                { field: 'FDID', width: 100, visible: false, title: '坟墓编号' },
                { field: 'FDMANID', width: 100, visible: false, title: '坟墓人员编号' },
                { field: 'Index', width: 40, align: 'center', title: '序号' },
                { field: 'FDNO', width: 50, align: 'center', title: '坟墓编号' },
                { field: 'SZNAME', width: 100, align: 'center', title: '死者姓名' },
                { field: 'GEOM', width: 100, align: 'center', visible: false, title: 'geom' },
                {
                    field: 'SZSEX', width:60, title: '死者性别', formatter: function (value, rec) {
                        if (rec.SZSEX == "1") {
                            return "女";
                        } else {
                            return "男";
                        }
                    }
                },
                {
                    field: 'ISFIRE', width: 60, title: '是否火化', formatter: function (value, rec) {
                        if (rec.ISFIRE == "1") {
                            return "是";
                        } else {
                            return "否";
                        }
                    }
                },
                { field: 'SWDATE', width: 100, align: 'center', title: '死亡时间', formatter: $.timePro },

                {
                    field: 'opt', title: '操作', width: 100, align: 'center',
                    formatter: function (value, rec) {
                        var btn = "<a class='table-icon see'   href='javascript:void(0)'  onclick='editItem(\"" + rec.FDID + "\",\"" + rec.FDMANID + "\")'></a><a   href='javascript:void(0)' class='table-icon del' onclick='DelItem(\"" + rec.FDID + "\",\"" + rec.FDMANID + "\")' style='margin-left:5px;'></a>";
                        return btn;
                    }
                }
        ];
        $('#gridList').customDataGrid({
            url: "/Home/GetFdInfo",
            Params: ["fdno", "szsex", "jsname", "geom", "szsex", "ishh", "isqf"],
            height: $(window).height() - 350,
            //sortName: 'corpname',
            //sortOrder: 'asc',
            columns: columns,
            onLoadSuccess: function (data) {
                var data = $('#gridList').bootstrapTable('getData', true);
                //合并单元格
                mergeCells(data, "FDNO", 1, $('#gridList'));
                $("#szsex").val("");
                $("#ishh").val("");
                $("#isqf").val("");
                $("input[name=rdo]").each(function () {
                    if ($(this).prop("checked")) {
                        $("#szsex").val($(this).val());
                        return;
                    }
                })
                $("input[name=btn]").each(function () {
                    if ($(this).prop("checked")) {
                        $("#ishh").val($(this).val());
                        return;
                    }
                })
                $("input[name=btnRad]").each(function () {
                    if ($(this).prop("checked")) {
                        $("#isqf").val($(this).val());
                        return;
                    }
                })
                var fdno = $('#fdno').val(),
                    szsex = $('#szsex').val(),
                    jsname = $('#jsname').val(),
                    geom = $('#geom').val();
                ishh = $("#ishh").val();
                isqf = $("#isqf").val();

                var condition = "1=1";
                if (fdno) {
                    condition += " and  (fdno like '%" + fdno + "%' or szname like '%" + fdno + "%' ) ";
                }

                if (szsex) {
                    if (szsex == "0") {
                        condition += " and (szsex=" + szsex + " or szsex is null) ";
                    }
                    else {
                        condition += " and szsex=" + szsex + " ";
                    }
                }
                if (isqf) {
                    if (isqf == "0") {
                        condition += " and (qfyx=" + isqf + " or qfyx is null) ";
                    }
                    else {
                        condition += " and qfyx=" + isqf + " ";
                    }
                }
                if (ishh) {
                    if (ishh == "0") {
                        condition += " and (isfire=" + ishh + " or isfire is null) ";
                    }
                    else {
                        condition += " and isfire=" + ishh + " ";
                    }
                }
                if (jsname) {
                    condition += " and jsname like '%" + jsname + "%' ";
                }
                if (geom) {
                    condition += " and st_intersects(st_geomfromtext('" + geom + "',4326),geom) ";
                }
                filterMap(condition);

            },
            onDblClickRow: function (item, $element) {
                rowNow();
                // editItem(item.CASEID);
                var geom = item.GEOM;
                if (geom) {
                    locateToMap(geom);
                }
            },
            onClickRow: function (item, $element) {
                rowNow()
                var geom = item.GEOM;
                if (geom) {
                    locateToMap(geom);
                }
            }
        });
    }
    //删除
    function DelItem(fdid, fdmanid) {
        layer.confirm('您确定要删除该坟地人员信息吗？', {
            btn: ['确定', '取消'] //按钮
        }, function () {
            $.post("/Home/DelFdMan", { fdmanid: fdmanid, fdid: fdid }, function (msg) {
                if (msg == "1") {
                    layer.msg("操作成功!");
                    Search();
                } else {
                    layer.msg(msg);
                }
            });
        }, function () {
        });
    }
    function rowNow() {
        $('table tr').click(function () {
            $(this).addClass('active').siblings().removeClass('active');
        })
    }
    //定位
    function locateToMap(geom) {
        locateLayer.getSource().clear();
        var geom = wktFormat.readGeometry(geom);
        var feature = new ol.Feature({
            geometry: geom
        });
        locateLayer.getSource().addFeature(feature);
        view.fit(geom, map.getSize());
        view.setZoom(20);
    }
    //绘制图形
    function drawPoly() {
        addInteraction();
    }
    //清除绘制条件
    function clearDraw() {
        if (draw) {
            map.removeInteraction(draw);
            draw = null;
        }
        drawSource.clear();
        $('#geom').val('');
        Search();
    }
</script>

<script type="text/javascript">
    var ip = "61.149.252.190:8080";
    var geoserverUrl = "http://" + ip + "/geoserver/dx/wms";
    var view, map, graveyardLayer,villageLayer, fdLayer, drawLayer, locateLayer, drawSource;
    var wktFormat = new ol.format.WKT();

    var container = document.getElementById('popup');
    var content = document.getElementById('popup-content');
    var closer = document.getElementById('popup-closer');



    var overlay = new ol.Overlay(({
        element: container,
        autoPan: true,
        autoPanAnimation: {
            duration: 250
        }
    }));

    var projection = ol.proj.get("EPSG:4326");
    var resolutions = [];
    for (var i = 0; i < 20; i++) {
        resolutions[i] = Math.pow(2, 20 - i);
    }
    var tilegrid = new ol.tilegrid.TileGrid({
        origin: [116.2664765930176, 39.67553390502931],
        resolutions: resolutions
    });

    graveyardLayer = new ol.layer.Tile({
        source: new ol.source.TileWMS({
            crossOrigin: 'anonymous',
            ratio: 1,
            url: 'http://61.149.252.190:8080/geoserver/gwc/service/wms?',
            params: {
                'FORMAT': "image/png",
                'VERSION': '1.1.1',
                tiled: true,
                STYLES: '',
                LAYERS: 'dx:beizangcun'
            }
        }),
        projection: projection,
        tileGrid: tilegrid,
        logo: false
    });
    villageLayer = new ol.layer.Image({
        source: new ol.source.ImageWMS({
            crossOrigin: 'anonymous',
            ratio: 1,
            url: geoserverUrl,
            params: {
                'FORMAT': "image/png",
                'VERSION': '1.1.1',
                STYLES: '',
                //LAYERS: 'hb:nuclear',
                LAYERS: 'dx:vill_beizangcun',
            }
        })
    });
    fdLayer = new ol.layer.Image({
        source: new ol.source.ImageWMS({
            crossOrigin: 'anonymous',
            ratio: 1,
            url: geoserverUrl,
            params: {
                'FORMAT': "image/png",
                'VERSION': '1.1.1',
                STYLES: '',
                //LAYERS: 'hb:nuclear',
                LAYERS: 'dx:tbfdinfo',
            }
        }),
        name:'fdLayer'
    });
    drawSource = new ol.source.Vector({
        crossOrigin: 'anonymous'
    });

    drawLayer = new ol.layer.Vector({
        source: drawSource
    });
    locateLayer = new ol.layer.Vector({
        source: new ol.source.Vector({
            crossOrigin: 'anonymous'
        }),
        style: function () {
            return new ol.style.Style({
                image: new ol.style.Icon({
                    src: "/Content/images/locate.png",
                    crossOrigin: 'anonymous',
                    size: [24, 24],
                    anchor: [0.5, 1]
                })
            })
        }
    });
    var extent = [116.20994660760404, 39.633749556467286, 116.32182325513757, 39.716444590834485];
    view = new ol.View({
        //center: [116.2664765930176, 39.67553390502931],
        //zoom: 14,
        minZoom: 13,
        maxZoom: 19,
        projection: 'EPSG:4326'
    });

    map = new ol.Map({
        controls: ol.control.defaults({
            //zoom: false,
            //rotate: false
            attribution:false
        }).extend([
            new ol.control.ZoomToExtent({
                className:'extent',
                //label:'全图',
                tipLabel:'全图',
                extent: extent
            })
            ]),
        overlays: [overlay],
        interactions: ol.interaction.defaults({
            doubleClickZoom: false
        }),
        layers: [graveyardLayer, villageLayer,fdLayer, locateLayer, drawLayer],
        target: "map",
        logo: false,
        view: view
    });
    view.fit(extent);



closer.onclick = function() {
    overlay.setPosition(undefined);
    closer.blur();
    return false;
};
map.on('pointermove', function(evt) {
    if (evt.dragging) {
        return;
    }
    displayFeatureInfo(evt);
});
    var displayFeatureInfo = function (evt) {
        var url = fdLayer.getSource().getGetFeatureInfoUrl(evt.coordinate, map.getView().getResolution(),
            'EPSG:4326', { 'INFO_FORMAT': 'application/json',
            'FEATURE_COUNT': 1 });
        $.get(url, {}, function (data) {
            if (data.features.length > 0) {
                var feature = data.features[0];

                    var fdno = feature.properties.fdno;
                    var szname = feature.properties.szname;
                    if (!fdno) { fdno = ''; };
                    if (!szname) { szname = ''; }
                    content.innerHTML = '<div>坟地编号：' + fdno + '</div><br/><div>死者姓名：' + szname + '</div>';
                    overlay.setPosition(feature.geometry.coordinates);

            } else {
                content.innerHTML = '';
                overlay.setPosition(undefined);
            }
        },'json')     
};


    var draw;
    function addInteraction() {
        clearDraw();
        draw = new ol.interaction.Draw({
            source: drawSource,
            type: "Polygon"
        });
        map.addInteraction(draw);
        draw.on('drawend', function (e) {
            var f = e.feature;
            var geomWkt = wktFormat.writeFeature(f);
            $('#geom').val(geomWkt);
            map.removeInteraction(draw);
            draw = null;
            Search();
        })
    }

    //过滤显示fd
    function filterMap(filter) {
        var source = new ol.source.ImageWMS({
            crossOrigin: 'anonymous',
            ratio: 1,
            url: geoserverUrl,
            params: {
                'FORMAT': "image/png",
                'VERSION': '1.1.1',
                STYLES: '',
                //LAYERS: 'hb:nuclear',
                LAYERS: 'dx:vwfd',
                //'cql_filter': filter
                viewparams: 'condition:' + filter.replace(new RegExp(",", 'gm'), "\\,")
            }
        });
        fdLayer.setSource(source);
        fdLayer.getSource().refresh();
    }

</script>
